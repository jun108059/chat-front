{"version":3,"sources":["components/Input/Input.js","components/LoginForm/LoginForm.js","components/Messages/Messages.js","service/chatapi.js","App.js","util/common.js","reportWebVitals.js","index.js"],"names":["Input","onSendMessage","useState","text","setText","onSubmit","className","TextField","label","placeholder","onChange","e","target","value","margin","onKeyPress","event","key","style","height","width","Button","variant","color","onClick","LoginForm","username","setUsername","handleSubmit","Messages","messages","currentUser","map","msg","message","sender","content","backgroundColor","renderMessage","api","Axios","create","baseURL","chatAPI","getMessages","groupId","console","log","get","sendMessage","roomId","post","App","setMessages","user","setUser","url","topics","onConnect","onDisconnect","onMessage","concat","onMessageReceived","debug","msgText","then","res","catch","Math","floor","random","toString","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.b0d293a8.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst Input = ({ onSendMessage }) => {\n    const [text, setText] = useState(\"\")\n\n    let onChange = (e) => {\n        setText(e.target.value)\n    }\n\n    let onSubmit = () => {\n        setText(\"\")\n        onSendMessage(text);\n    }\n\n    return (\n        <div className=\"message-input\">\n            <TextField\n                className=\"inputField\"\n                label=\"Type your message here...\"\n                placeholder=\"Enter your message and press ENTER\"\n                onChange={e => onChange(e)}\n                margin=\"normal\"\n                value={text}\n                onKeyPress={event => {\n                    if (event.key === 'Enter') {\n                        onSubmit(text);\n                    }\n                }}\n                style={{ height: \"30px\", width: \"80%\" }}\n            />\n\n            <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\n                Send\n            </Button>\n        </div>\n    );\n}\n\n\nexport default Input","import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst LoginForm = ({ onSubmit }) => {\n\n    const [username, setUsername] = useState(\"\");\n    let handleUserNameChange = event => setUsername(event.target.value);\n\n    let handleSubmit = () => {\n        onSubmit(username);\n    }\n\n    return (\n        <div>\n            <TextField\n                label=\"Type your username\"\n                placeholder=\"Username\"\n                onChange={handleUserNameChange}\n                margin=\"normal\"\n                onKeyPress={event => {\n                    if (event.key === 'Enter') {\n                        handleSubmit();\n                    }\n                }}\n            />\n            <br />\n            <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit} >\n                Login\n            </Button>\n\n        </div>\n    )\n}\n\nexport default LoginForm","import React from 'react'\n\nconst Messages = ({ messages, currentUser }) => {\n\n    let renderMessage = (message) => {\n        const { sender, content, color } = message;\n        const messageFromMe = currentUser.username === message.sender;\n        const className = messageFromMe ? \"Messages-message currentUser\" : \"Messages-message\";\n        return (\n            <li className={className}>\n                <span\n                    className=\"avatar\"\n                    style={{ backgroundColor: color }}\n                />\n                <div className=\"Message-content\">\n                    <div className=\"username\">\n                        {sender}\n                    </div>\n                    <div className=\"text\">\n                        {content}\n                    </div>\n                </div>\n            </li>\n        );\n    };\n\n    return (\n        <ul className=\"messages-list\">\n            {messages.map(msg => renderMessage(msg))}\n        </ul>\n    )\n}\n\n\nexport default Messages","import Axios from \"axios\";\n\nconst api = Axios.create({\n    baseURL: '/api/',\n});\n\nconst chatAPI = {\n    getMessages: (groupId) => {\n        console.log('Calling get messages from API');\n        return api.get(`messages/${groupId}`);\n    },\n\n    sendMessage: (username, text) => {\n        let msg = {\n            roomId: \"4\",\n            sender: username,\n            content: text\n        }\n        return api.post(`send`, msg);\n    }\n}\n\n\nexport default chatAPI;","import React, { useState } from 'react';\nimport SockJsClient from 'react-stomp';\nimport './App.css';\nimport Input from './components/Input/Input';\nimport LoginForm from './components/LoginForm/LoginForm';\nimport Messages from './components/Messages/Messages';\nimport chatAPI from './service/chatapi';\nimport { randomColor } from './util/common';\n\n\nconst SOCKET_URL = 'http://localhost:8082/ws-chat/';\n\nconst App = () => {\n  const [messages, setMessages] = useState([])\n  const [user, setUser] = useState(null)\n\n  let onConnected = () => {\n    console.log(\"Connected!!\")\n  }\n\n  let onMessageReceived = (msg) => {\n    console.log('New Message Received!!', msg);\n    setMessages(messages.concat(msg));\n  }\n\n  let onSendMessage = (msgText) => {\n    chatAPI.sendMessage(user.username, msgText).then(res => {\n      console.log('Sent', res);\n    }).catch(() => {\n      console.log('Error Occurred while sending message to api');\n    })\n  }\n\n  let handleLoginSubmit = (username) => {\n    console.log(username, \" Logged in..\");\n\n    setUser({\n      username: username,\n      color: randomColor()\n    })\n\n  }\n\n  return (\n      <div className=\"App\">\n        {!!user ?\n            (\n                <>\n                  <SockJsClient\n                      url={SOCKET_URL}\n                      topics={['/topic/group']}\n                      onConnect={onConnected}\n                      onDisconnect={console.log(\"Disconnected!\")}\n                      onMessage={msg => onMessageReceived(msg)}\n                      debug={false}\n                  />\n                  <Messages\n                      messages={messages}\n                      currentUser={user}\n                  />\n                  <Input\n                      onSendMessage={onSendMessage}\n                  />\n                </>\n            ) :\n            <LoginForm onSubmit={handleLoginSubmit} />\n        }\n      </div>\n  )\n}\n\nexport default App;","export function randomColor() {\n    return '#' + Math.floor(Math.random() * 0xFFFFFF).toString(16);\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}